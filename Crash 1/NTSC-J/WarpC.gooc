#gool WarpC 32 5

#include "..\\goolstdlib.gooc"

#anim WARP_WHIRL_PARTICLE [WWP0V] 1

#sprite PLACEHOLDER [WillT]
#tex 0x808080 0 1 6 0 108 4 8 8

#sprite WARP_SMOKE [WillT]
#tex 0x00FFFF 0 1 5 8 96 24 32 32
#tex 0x00B4FF 0 1 5 8 96 24 32 32
#tex 0x0082FF 0 1 5 8 96 24 32 32

#spawn S_0                        __s_0
#spawn S_WARP_OUT                 Warp_Out
#spawn S_2                        __s_2
#spawn S_WARP_SMOKE_MASTER        Warp_Smoke_Master
#spawn S_WARP_SMOKE_SLAVE         Warp_Smoke_Slave
#spawn S_WARP_WHIRL               Warp_Whirl

#include "DoctC.gooh"

state Warp_Out { // 0
	code () {
		SetScale(0, 1S, 0)
		y += 1m
		zindex = 24
		spawn(WarpC, S_WARP_SMOKE_MASTER, 1, 0, -0.1m, 0)
		spawn(WarpC, S_WARP_WHIRL, 1, 1.0S, -0.3m, 720deg)
		if (FRAMETIME < 30) {
			spawn(WarpC, S_WARP_WHIRL, 1, 0.9S, 0, 600deg)
		}
		soundpitch(4.0)
		sounddecay(0.84)
		soundfadet(0.5s)
		soundfadev(0.3V, 0, 2)
		soundplay([WAn0A], 0)
		sleepnull()
	}
	event (e, a) {
		if (e == EventDespawn) {
			soundsetup(0, voice, 5)
			soundfadet(0.25s, voice)
			soundfadev(0, voice, 3)
		}
	}
	trans {
		unless (STATUS_FIRSTFRAME) {
			if (var level = LEVEL; level == LEVEL_HogWild || level == LEVEL_WholeHog) {
				if (player->z < z + 2m) {
					sendevent(EventWarp, player, 0)
					changestateif(Warp_Out_Used, eventaccepted)
				}
			}
			else {
				if (distance(player, DIST_EXACT|DIST_NO_Y) < 1.6m) {
					if (player->y >= y - 1.3m && player->y < y && player->statusa \ FLAG_GROUNDLAND && !(player->statusa \ 0x200000)) {
						if (player->invincible == 5) {
							player->invincible = 0
						}
						sendevent(EventWarp, player, 0)
						changestateif(Warp_Out_Used, eventaccepted)
					}
				}
			}
			roty = GAMEDIR
			if (scalex < 1S) {
				scalex += .05S
				scalez = scalex
			}
		}
	}
}

state Warp_Out_Used { // 0
	code () {
		cascadeevent(EventTriggered, self)
		sleepnull()
	}
	trans {
		getvert(vvec, player, 0)
		unless (STATUS_FIRSTFRAME) {
			y += vecy - groundy
		}
		groundy = vecy
		x = seek(x, player->x, spd(1m))
		z = seek(z, player->z, spd(1m))
		if (frametime - statetime >= .8s) {
			if (FRAMETIME < 32) {
				spawn(DoctC, DoctC_S_DOCTOR_SPARKLE, 3, 250.0, player, .6s)
			}
		}
		scalex += .05S
		scalez = scalex
	}
}

state Warp_Smoke_Master { // 0
	statusc 0x22
	code (xoff, yoff, zoff) {
		vecx = xoff
		vecy = yoff
		vecz = zoff
		x += vecx
		y += vecy
		z += vecz
		vely = rand(.25m)
		SetScale(1S)
		if (!rand(2)) {
			trotz = 15deg + rand(5deg)
		}
		else {
			trotz = -(15deg + rand(5deg))
		}
		if (FRAMETIME < 27) {
			spawn(WarpC, S_WARP_SMOKE_SLAVE, 1, 0.4m, 40.0)
		}
		spawn(WarpC, S_WARP_SMOKE_SLAVE, 1, 0.2m, 25.6)
		spawn(WarpC, S_WARP_SMOKE_SLAVE, 1, -0.2m, 12.8)
		spawn(WarpC, S_WARP_SMOKE_SLAVE, 1, -0.4m, 19.2)
		FlipRand()
		setanim(WARP_SMOKE, rand(3.0))
		sleep()
	}
	trans {
		unless (STATUS_FIRSTFRAME) {
			groundy = parent->y + vecy
			y = groundy + sin(loopseek(vely, 1m, 1m>>7), 1m-800)
			rotz += trotz
			x = parent->x + vecx
			z = parent->z + vecz
		}
	}
}

state Warp_Smoke_Slave { // 0
	statusc 0x22
	code (drift, size) {
		zindex = 48
		SetScale(0, 0, size)
		var1 = size
		if (!rand(2)) {
			trotz = 15deg + rand(5deg)
		}
		else {
			trotz = -(15deg + rand(5deg))
		}
		var0 = rand(.5s)
		SetVel(0, 0, drift)
		SetVec(randi(-.5m, .5m), rand(.5m), drift)
		setanim(WARP_SMOKE, 3.0)
		sleep()
	}
	trans {
		unless (STATUS_FIRSTFRAME) {
			x = creator->x + velx
			y = creator->y + vely
			z = creator->z + velz
			velx = seek(velx, vecx, .02m)
			vely = seek(vely, vecy, .02m)
			velz = seek(velz, vecz, .02m)
			if (!time(.5s, var0)) {
				vecx = randi(-.8m, .8m)
				vecy = randi(-.4m, .4m)
				vecz = randi(-.8m, .8m)
			}
			rotz += trotz
			if (FRAMETIME < 30) {
				scalez = seek(scalez, var1, .05S)
			}
			else {
				scalez = seek(scalez, .1S, .05S)
			}
			scalex = seek(scalex, scalez, .1S)
			scaley = seek(scaley, scalez, .1S)
		}
	}
	
}

state Warp_Whirl { // 0
	statusc 0x22
	code (size, yoff, rotspd) {
		statusb |= FLAG_STRING_CENTER
		zindex = 24
		var0 = false
		var1 = size
		SetScale(0, .75S, 0)
		y += yoff
		troty = rotspd
		sleepanim(0, WARP_WHIRL_PARTICLE)
	}
	event (e, a) {
		if (e == EventTriggered) {
			accev()
			var0 = true
		}
	}
	trans {
		unless (STATUS_FIRSTFRAME) {
			scalex = parent->scalex * var1 >> 12
			scalez = parent->scalez * var1 >> 12
			roty = spd(roty, troty)
			if (var0) {
				colra = seek(colra, 0, 8)
				colga = seek(colga, 0, 8)
				colba = seek(colba, 0, 8)
				SetColor(colra, colga, colba)
				changestateif(Die_Fast, !colra)
			}
		}
	}
}

state Die_Fast { // 0
	statusc 0
	code () {}
}

