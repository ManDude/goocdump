#gool Dog_C 13 3

#include "..\\GOOL_EXPR.gooc"

#anim GUARD_DOG [GD15V] 1

#spawn S_GUARD_DOG      Guard_Dog_Spawn

var DogAngerDistance, DogAttackSpeed

event EventJumpedOn      => state Guard_Dog_Die
event EventHit           => state Guard_Dog_Die
event EventHitInvincible => state Guard_Dog_Fling
event EventFling         => state Guard_Dog_Die

state Guard_Dog_Spawn {
	code () {
		entitysetspawn(0)
		return
		zindex = 24
		statusb = FLAG_ROT_Y | FLAG_TRACK_PATH_SIGN | FLAG_COLLIDABLE | 0x800 | 0x2000
		if (vecx) {
			DogAngerDistance = vecx
		}
		else {
			DogAngerDistance = 6m
		}
		if (vecy) {
			DogAttackSpeed = vecy
		}
		else {
			DogAttackSpeed = 15.0
		}
		density = 40.0
		yzapproach = 360deg
		trotx = 360deg
		calcpath(0)
		roty = troty
		changestate(Guard_Dog_Wait)
	}
}

inline sub HitPlayer() {
	if (STATUS_PLAYER_D_COLLIDER) {
		sendeventif(EventHit, collider, player->statusa \ FLAG_GROUNDLAND, 100.0)
	}
}

state Guard_Dog_Wait {
	statusc 0
	code () {
		sleepanim(0, GUARD_DOG)
	}
	event => state Guard_Dog_Attack
	trans {
		changestateif(Guard_Dog_Angry, distance(player, 2) < DogAngerDistance)
		HitPlayer()
	}
}

state Guard_Dog_Angry {
	statusc 0
	code () {
		nop() // weird buggy line
		scalex = 0.8S
		scaley = 0.8S
		scalez = 0.8S
		sleepanim(0, GUARD_DOG)
	}
	event => state Guard_Dog_Attack
	trans {
		changestateif(Guard_Dog_Wait, distance(player, 2) > DogAngerDistance)
		changestateif(Guard_Dog_Attack, distance(player, 2) < DogAngerDistance - 1m)
		HitPlayer()
	}
}

state Guard_Dog_Attack {
	statusc 0
	code () {
		scalex = 1.0S
		scaley = 1.0S
		scalez = 1.0S
		sleepanim(0, GUARD_DOG)
	}
	event (e, a) {
		if (e == EventSpinHit && interrupter == player) {
			interrupter->velx = 0
			interrupter->velz = 0
			if (interrupter->x < x) {
				interrupter->troty = 270deg
				interrupter->speed = 15m
				interrupter->velx = -15m
			}
			else {
				interrupter->troty = 90deg
				interrupter->speed = 15m
				interrupter->velx = 15m
			}
			interrupter->statusb &= ~FLAG_DPAD_CONTROL
		}
	}
	trans {
		pathprog = spd(pathprog, DogAttackSpeed)
		calcpath()
		changestateif(Guard_Dog_Kill, STATUS_PATH_END)
		HitPlayer()
	}
}

state Guard_Dog_Kill {
	statusc 0
	code () { entitysetspawn(0) }
}

state Guard_Dog_Die {
	stateflag 0x23
	statusc 0x12
	code (h) {
		EnemyDie(h)
	}
	trans {
		EnemyDieTrans()
	}
}

state Guard_Dog_Fling {
	stateflag 0x30
	statusc 0x12
	code (h) {
		EnemyFling(h)
	}
	trans {
		EnemyFlingTrans()
	}
}

